#+title: Application Lifecycle Management

* Rolling Updates and Rollbacks

*Deployment Strategies*

- recreate
- rolling update (default)

** Update a Deployment

Adjust the container image version

Update a deployment

#+begin_src yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
  labels:
    app: myapp
    type: front-end
spec:
  replicas: 3
  selector:
    matchLabels:
      type: front-end
  template:
    metadata:
      name: myapp-pod
      labels:
        app: myapp
        type: front-end
    spec:
      containers:
      - name: nginx-container
        image: nginx:1.7.1
#+end_src

** Update deployments commands

#+begin_src shell

# Apply the changes of a deployment
kubectl apply -f deployment-definition.yml

# update the container image directly
kubectl set image deployment/myapp-deployment nginx-container=nginx:1.9.1

# view deployment details
kubectl describe deployment myapp-deployment

# perform a rollback
kubectl rollout undo deployment/myapp-deployment

# check the status of the rollout
kubectl rollout status deployment/myapp-deployment
#+end_src
* Commands and Arguments in Docker
** Default Commands in Docker Images

Each Docker image contains instructions that define the process to run when a container starts.

*** Example for nginx

#+begin_src shell
# Install Nginx.
RUN \
    add-apt-repository -y ppa:nginx/stable && \
    apt-get update && \
    apt-get install -y nginx && \
    rm -rf /var/lib/apt/lists/* && \
    echo "\ndaemon off;" >> /etc/nginx/nginx.conf && \
    chown -R www-data:www-data /var/lib/nginx

# Define mountable directories.
VOLUME ["/etc/nginx/sites-enabled", "/etc/nginx/certs", "/etc/nginx/conf"]

# Define working directory.
WORKDIR /etc/nginx

# Define default command.
CMD ["nginx"]
#+end_src

*** Example for ubuntu

#+begin_src shell
# Pull base image.
FROM ubuntu:14.04


# Install necessary packages.
RUN \
    sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list && \
    apt-get update && \
    apt-get -y upgrade && \
    apt-get install -y build-essential software-properties-common byobu curl git htop man unzip vim wget && \
    rm -rf /var/lib/apt/lists/*

# Add configuration files.
ADD root/.bashrc /root/.bashrc
ADD root/.gitconfig /root/.gitconfig
ADD root/.scripts /root/.scripts

# Set environment variables.
ENV HOME /root

# Define working directory.
WORKDIR /root

# Define default command.
CMD ["bash"]
#+end_src
** Overriding the Default Command

#+begin_src shell
# overide bash command with sleep
docker run ubuntu sleep 5
#+end_src

Change permanently the behavior of the image so that it always runs sleep 5

You can specify the command in either of two formats:

1. Shell form
   #+begin_src shell
FROM ubuntu
CMD sleep 5
   #+end_src

2. JSON array format:
   #+begin_src shell
FROM ubuntu
CMD ["sleep", "5"]
   #+end_src

#+begin_src shell
# build the image
docker build -t ubuntu-sleeper .

# run the container
docker run ubuntu-sleeper

#+end_src
** Configuring ENTRYPOINT for Runtime Arguments
