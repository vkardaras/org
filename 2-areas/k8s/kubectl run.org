#+title: Kubectl Run

* Options

#+begin_src shell

# create the resource after the run of the command
--dry-run

# check the command without creating the resource
--dry-run=client

# output the resource definition in YAML format on the screen
-o yaml

#+end_src

* Pod

#+begin_src shell

# create an NGINX Pod
kubectl run nginx --image=nginx

# create a pod on specific port
kubectl run custom-nginx --image=nginx --port=8080

# create a pod with labels
kubectl run redis -l tier=db --image=redis:alpine

# generate POD Manifest YAML file (-o yaml). Don’t create it(–dry-run)
kubectl run nginx --image=nginx --dry-run=client -o yaml

#+end_src

* Deployment

#+begin_src shell

# create a deployment
kubectl create deployment --image=nginx nginx

# generate Deployment YAML file (-o yaml). Don’t create it(–dry-run)
kubectl create deployment --image=nginx nginx --dry-run=client -o yaml

# generate Deployment with 4 Replicas
kubectl create deployment nginx --image=nginx --replicas=4

# scale a deployment
kubectl scale deployment nginx--replicas=4

# save the YAML definition to a file and modify
kubectl create deployment nginx --image=nginx --dry-run=client -o yaml > nginx-deployment.y

#+end_src

* Service

#+begin_src shell

# Create a Service named redis-service of type ClusterIP to expose pod redis on port 6379 and use the pod’s labels as selectors
kubectl expose pod redis --port=6379 --name redis-service --dry-run=client -o yaml

# use the pods labels as selectors, instead, it will assume selectors as app=redis
kubectl create service clusterip redis --tcp=6379:6379 --dry-run=client -o yaml

# create a Service named nginx of type NodePort to expose pod nginx’s port 80 on port 30080 on the nodes
# generate a definition file and then add the node port manually before creating the service with the pod
kubectl expose pod nginx --type=NodePort --port=80 --name=nginx-service --dry-run=client -o yaml

# this will not use the pod labels as selectors
kubectl create service nodeport nginx --tcp=80:80 --node-port=30080 --dry-run=client -o yaml

#+end_src

Both the above commands have their own challenges. While one of them cannot accept a selector, the other cannot accept a node port. I would recommend going with the
=kubectl expose=
