#+title: Services

* Define services

- Lets assume we have a program at the following path =/opt/code/my_app.py=
** Define a service =my_app.service= at the following directory
  =/etc/systemd/system=

my_app.service
#+begin_src shell
[Service]
ExecStart=/usr/bin/python3 /opt/code/my_app.py
#+end_src

** Run the service upder a specific user

#+begin_src shell
[Service]
ExecStart=/usr/bin/python3 /opt/code/my_app.py
User=project_mercury
#+end_src

** Reload services

#+begin_src shell
systemctl deamon-reload
#+end_src

** Start the service

#+begin_src shell
systemctl start my_app
#+end_src

** Configure the service to start when the system boots up

my_app.service
#+begin_src shell
[Service]
ExecStart=/usr/bin/python3 /opt/code/my_app.py

[Install]
WantedBy=graphical.target
#+end_src

Configure to run at startup
#+begin_src
systemctl enable my_app
#+end_src

** Provide additional metadata for the service

my_app.service
#+begin_src shell
[Unit]
Description=My python web application
Documentation=http://wiki.caleston-dev.ca/reported

[Service]
ExecStart=/usr/bin/python3 /opt/code/my_app.py

[Install]
WantedBy=multy-user.target
#+end_src

** Add dependencies before or after starting the application

my_app.service
#+begin_src shell
[Unit]
Description=My python web application

[Service]
ExecStart=/usr/bin/python3 /opt/code/my_app.py
ExecStartPre=/opt/code/configure_db.sh
ExecStartPost=/opt/code/email_status.sh

[Install]
WantedBy=multy-user.target
#+end_src

** Restart application automatically after 10 seconds if crashes

my_app.service
#+begin_src shell
[Unit]
Description=My python web application

[Service]
ExecStart=/usr/bin/python3 /opt/code/my_app.py
ExecStartPre=/opt/code/configure_db.sh
ExecStartPost=/opt/code/email_status.sh
Restart=always
RestartSec=10

[Install]
WantedBy=multy-user.target
#+end_src

** Define a dependency on a service

my_app.service
#+begin_src shell
[Unit]
Description=My python web application
After=postgresql.service

[Service]
ExecStart=/usr/bin/python3 /opt/code/my_app.py

[Install]
WantedBy=multy-user.target
#+end_src

* SYSTEMD Tools

** Managing Services with systemctl

Example for httpd

#+begin_src shell

# start service
systemctl start httpd

# restart service
systemctl restart httpd

# reload service
systemctl reload httpd

# stop service
systemctl stop httpd

# check service status
systemctl status httpd

# configure to start at startup
systemctl enable httpd

# configure to not start at startup
systemctl disable httpd

#+end_src

Example for a custom service =my_app.service=

#+begin_src shell
systemctl start my_app.service
systemctl restart my_app.service
systemctl reload my_app.service
systemctl stop my_app.service
systemctl status my_app.service
systemctl enable my_app.service
systemctl disable my_app.service
#+end_src

*** Reloading Systemd Configuration

#+begin_src shell

# reload the system manager configuration to apply changes after modifying a unit
systemctl daemon-reload

# edit a service unit, no restart required
systemctl edit my_app.service --full

#+end_src

** Working with System Targets

#+begin_src shell

# view the current default target
systemctl get-default

# change the default target (for example, to multi-user mode)
systemctl set-default multi-user.target

# list all units (both loaded and attempted)
systemctl list-units --all

# view only active units
systemctl list-units

#+end_src

** Querying Logs with journalctl

#+begin_src shell

# view all log entries from the oldest to the newest
journalctl

# view logs for a specific unit, such as Docker
journalctl -u docker.service

#+end_src

* Demo services

** Demo service for jar

Create the file =/etc/systemd/system/demo.service=

#+begin_src conf
[Unit]
Description=Demo service
Requires=network.target remote-fs.target
After=network.target remote-fs.target

[Service]
Type=simple
User=vasilis
ExecStart=/usr/bin/java -jar /home/vasilis/demo-1.0.0.jar
Restart=on-failure
RestartSec=10

[Install]
WantedBy=multi-user.target
#+end_src

** Demo service for tomcat

Create the file =/etc/systemd/system/tomcat.service=

#+begin_src conf
[Unit]
Description=Apache tomcat
After=syslog.target network.target

[Service]
Type=forking
User=tomcat
Group=tomcat

Environment=CATALINA_PID=/user/local/tomcat10/temp/tomcat.pid
Environment=CATALINA_HOME=/user/local/tomcat10
Environment=CATALINA_BASE=/user/local/tomcat10

ExecStart=/usr/local/tomcat10/bit/catalina.sh start
ExecStop=/usr/local/tomcat10/bit/catalina.sh stop

RestartSec=12
Restart=always

[Install]
WantedBy=multi-user.target
#+end_src
